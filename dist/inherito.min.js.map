{"version":3,"sources":["inherito.js"],"names":[],"mappings":";;AAAA,IAAM,QAAQ,GAAG,CAAC,YAAU;;AAE3B,aAAY,CAAC;;;;AAEb;;;;;;AAMC,UAAS,GAAG,SAAZ,SAAS,CAAI,QAAQ,EAAK;AACzB,SAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EACtB;;;;;;;AAMD,QAAO,GAAG,SAAV,OAAO,CAAI,QAAQ,EAAE,UAAU,EAAK;AACnC,SAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;EAC3C;;;;;;;AAMD,OAAM,GAAG,SAAT,MAAM,CAAI,QAAQ,EAAK;AACtB,MAAI,QAAQ,CAAC,IAAI,EAAE;AAClB,OAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzB,OAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;AAClC,OAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACnE,MAAM;AACN,UAAO,KAAK,CAAC;GACb;EACD;;;;;;;AAMD,aAAY,GAAG,SAAf,YAAY,GAAmB;oCAAZ,OAAO;AAAP,UAAO;;;AACzB,MAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,OAAM;MACjC,UAAU,QAAO,CAAC;;;AAGnB,SAAO,CAAC,GAAG,CAAC,UAAC,YAAY,EAAK;AAC7B,WAAQ,GAAG,YAAY,CAAC;GACxB,CAAC,CAAC;;;AAGH,UAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;AAC5C,UAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC;AAC5D,UAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;;AAEhD,SAAO,QAAQ,CAAC;EAChB,CAAC;;;AAGH,QAAO;AACN,QAAM,EAAG,YAAY;EACrB,CAAC;CAEF,CAAA,EAAG,CAAC","file":"inherito.min.js","sourcesContent":["const inHerito = (function(){\n\t\n\t'use strict';\n\t\n\tlet \n\t\n\t\t/** \n\t\t * @private \n\t\t * Log object if object has debug set to true\n\t\t*/\n\t\tlogObject = (instance) => {\n\t\t\tconsole.dir(instance);\n\t\t},\n\t\t\n\t\t/** \n\t\t * @private \n\t\t * Merge parent's props into instance if indicated\n\t\t*/\n\t\tinherit = (instance, superProps) => {\n\t\t\treturn Object.assign(instance, superProps);\n\t\t},\n\t\t\n\t\t/** \n\t\t * @private\n\t\t * Render object to DOM if specified in object creation\n\t\t*/\n\t\trender = (instance) => {\n\t\t\tif (instance.view) {\n\t\t\t\tlet view = instance.view;\n\t\t\t\tview.template.src = view.imageUrl;\n\t\t\t\tview.parent.querySelector(view.context).appendChild(view.template);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * @public\n\t\t * Create object instance and log or render if true\n\t\t*/\n\t\tcreateObject = (...options) => {\n\t\t\tlet instance = Object.create(this),\n\t\t\t\tsuperProps = this;\n\t\t\t\t\t\t\n\t\t\t// set only the new properties\n\t\t\toptions.map((currentValue) => {\n\t\t\t\tinstance = currentValue;\n\t\t\t});\n\t\t\t\n\t\t\t// options if provided\n\t\t\tinstance['view'] ? render(instance) : false;\n\t\t\tinstance['inherit'] ? inherit(instance, superProps) : false;\n\t\t\tinstance['debug'] ? logObject(instance) : false;\n\n\t\t\treturn instance;\n\t\t};\n\t\n\t// public api\n\treturn {\n\t\tcreate : createObject\n\t};\t\n\t\n})();\n\n"],"sourceRoot":"/source/"}